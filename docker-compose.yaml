networks:
  carservice:
    driver: "bridge"

services:
  #PHP-FPM service
  app:
    build:
      context: .
      dockerfile: ./docker-files/php/8.2/Dockerfile
    container_name: carservice
    restart: unless-stopped
    tty: true
    working_dir: /var/www/carservice
    depends_on:
      - db
      - redis
    volumes:
      - ./:/var/www/carservice
      - ./docker-files/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - carservice

  # queue worker
  queue-worker:
    build:
      context: .
      dockerfile: ./docker-files/php/8.2/Dockerfile
    container_name: carservice_queue_worker
    restart: unless-stopped
    tty: true
    working_dir: /var/www/carservice
    command: php artisan queue:work --tries=3 --timeout=90
    depends_on:
      - app
      - redis
      - db
    volumes:
      - ./:/var/www/carservice
      - ./docker-files/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - carservice

  #   #NGINX service
  carservice_webserver:
    build:
      context: .
      dockerfile: ./docker-files/nginx/Dockerfile
    container_name: carservice_webserver
    restart: unless-stopped
    depends_on:
      - db
      - app

    ports:
      - "8893:80"
      - "8894:443"

    volumes:
      - ./:/var/www/carservice
      - ./docker-files/nginx/conf.d/app.conf:/etc/nginx/conf.d/app.conf
        # Mount SSL certificates
      - ./docker-files/nginx/certs/localhost+2.pem:/etc/nginx/certs/localhost+2.pem
      - ./docker-files/nginx/certs/localhost+2-key.pem:/etc/nginx/certs/localhost+2-key.pem
      # Mount local directory for Nginx logs
      - ./storage/logs/nginx:/var/log/nginx

    networks:
      - carservice

  db:
    container_name: carservice_db
    image: mysql:latest
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    restart: always
    tty: true
    ports:
      - "8895:3306"

    volumes:
      - ./storage/dbdata:/var/lib/mysql
      - ./docker-files/mysql/mysql.cnf:/etc/mysql/mysql.cnf

    networks:
      - carservice

  # setup db management interface
  adminer:
    container_name: carservice_adminer
    image: adminer:latest
    restart: always
    ports:
      - "8896:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    networks:
      - carservice

  #setup redis
  redis:
    container_name: carservice_redis
    image: redis:alpine
    env_file:
      - .env
    ports:
      - "8897:6379"
    volumes:
      - ./storage/redis/data:/data
    networks:
      - carservice
# TODO setup cron service
